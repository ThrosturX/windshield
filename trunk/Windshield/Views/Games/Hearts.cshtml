@model Windshield.ViewModels.BoardViewModel

@{
    ViewBag.Title = "Hearts";
}

<script src="@Url.Content("~/Scripts/Hearts.js")" type="text/javascript"></script>

<div class="span12">
			<div id="felt">

			@{
				for(int i = 1 ; i <= 52 ; i++)
				{
					<div id="@i" class="cardback"> <span class="spanDisplay_@i spanDisplay" style="display:inline;"> </span> </div>	
				}
			}
			
			@{  // hidden DOM for the trick cards.
				for(int i = 1; i <= 4 ; i++)
				{
					<div id ="trick_@i"	class="cardback" style="display:none;"> <span class="spanDisplay"> </span> </div>
				}
			}

				</div> 
		</div>

<script type="text/javascript">
	$(document).ready(function () {
		var group = '@(Model.id)';
		var hub = $.connection.gameHub;
		var currentUser = '@(Context.User.Identity.Name)';
		var playerOne = '@(Model.GetPlayerName(0))';
		var playerTwo = '@(Model.GetPlayerName(1))';
		var playerThree = '@(Model.GetPlayerName(2))';
		var playerFour = '@(Model.GetPlayerName(3))';
		var card_left = [];
		var card_top = [];

		$("#GameRestart").hide();
		$("#winner-dialog-popup").hide();
		
		function setCard(card, pos) {
			var suit;
			var rank = "rank_" + card[0];

			if (card[1] === "H") {
				suit = "heart";
			}
			else if (card[1] === "S") {
				suit = "spade";
			}
			else if (card[1] === "D") {
				suit = "diam";
			}
			else if (card[1] === "C") {
				suit = "club";
			}
			else {
				$("#" + pos).hide();
			}
			$("#" + pos).removeClass("cardback");
			$("#" + pos).addClass(rank +" " + suit + " card");
			//if (($(".spanDisplay_" + pos).is(':empty'))) {
			//alert($(".spanDisplay_" + pos).text());
			if ($(".spanDisplay_" + pos).text().trim() == "") {
				if (card[0] == 'T') {
					$(".spanDisplay_" + pos).html("10");
					$("#" + pos).append("&" + suit + "s;");
				}
				else {
					$(".spanDisplay_" + pos).html(card[0]);
					$("#" + pos).append("&" + suit + "s;");
				}
			}
		}

		hub.client.Broadcast = function (status) {
			var statusArray = status.split('|');
			var hArray = statusArray[1];
			var handArray = hArray.split('/');
			var index;

			// find which player's cards should be picked
			if (currentUser === playerOne) {
				index = 0;
			}
			else if (currentUser === playerTwo) {
				index = 1;
			}
			else if (currentUser === playerThree) {
				index = 2;
			}
			else if (currentUser === playerFour) {
				index = 3;
			}
			else {
				console.log("There was an error parsing the users.");
				console.log("CurrentUser: " + currentUser);
				console.log("Players:");
				console.log(playerOne);
				console.log(playerTwo);
				console.log(playerThree);
				console.log(playerFour);
			}

			var cardArray = handArray[index].split(",");

			// display the player's cards
			for (var i = 1; i <= 13; i++) {
				// extract card from string
				var cardstring = cardArray[i - 1];
				$("#" + i).removeClass('card');

				setCard(cardstring, i);
			}

			// place any trick cards into their positions
			var tArray = statusArray[0].split(',');

			for (var i = 1; i <= 4; i++) {
				var cString = tArray[i].split('-');
				var cardstring = cString[i];

				setCard(cardstring, "trick_" + i);
			}

		};

		hub.client.GameOver = function (winner) {
			if (winner != "") {
				$("#winner-dialog-popup").text(winner + " wins!");
				if (winner == currentUser) {
					$("#GameWins").html(parseInt($("#GameWins").html(), 10) + 1);
				}
				else {
					$("#GameLoss").html(parseInt($("#GameLoss").html(), 10) + 1);
				}
			}
			else {
				$("#winner-dialog-popup").text("It's a draw!");
				$("#GameDraws").html(parseInt($("#GameDraws").html(), 10) + 1);
			}

			$("#winner-dialog-popup").show(2);

		}
		
		$.connection.hub.start().done(function() {
			hub.server.join(group);
			hub.server.startGame(group);
			hub.server.tryAction(group, "checkAI", currentUser);

			$("#felt").on('click', '.card', function () {
				hub.server.tryAction(group, "play|" + cardToShort(this.id), currentUser);
			});

			setTimeout(function () {
				hub.server.tryAction(group, "refresh", currentUser);
			}, 2000);

		}); 
	}); 
</script>