@model Windshield.ViewModels.BoardViewModel

@{
    ViewBag.Title = "Hearts";
}

<h2>Hearts</h2>

<div class="span8">
			<div id="felt">

			@{
				for(int i = 1 ; i < 52 ; i++)
				{
					<div id="i" class="cardback"> </div>	
				}
			}
			
		<!--	{
				int i = 1;
					foreach(var card in Model.deck)
					{
						if(card.face > 1 && card.face <= 10)
						{
						//gice each card in our deck a unique identity
						<div id="card_i" class="cardback rank_card.face card.suit"> <span class="spanDisplay" style="display:none;"> @card.face   </span> </div>
						}
						
						else
						{
							switch (card.face)
							{
								case (1):
									<div id="card_i" class="cardback rank_card.face card.suit"> <span class="spanDisplay" style="display:none;"> A  </span> </div>
									break;
								case (11):
									<div id="card_i" class="cardback rank_card.face card.suit"> <span class="spanDisplay" style="display:none;"> J  </span> </div>	
									break;
								case (12):
									<div id="card_i" class="cardback rank_card.face card.suit"> <span class="spanDisplay" style="display:none;"> Q  </span> </div>	
									break;
								case (13):
									<div id="card_i" class="cardback rank_card.face card.suit"> <span class="spanDisplay" style="display:none;"> K  </span> </div>
									break;
								default:
									break;
							}
						}

						i++;
					}
			 } -->
				</div> 
		</div>

<script type="text/javascript">
	$(document).ready(function () {
		var group = '@(Model.id)';
		var hub = $.connection.gameHub;
		var currentUser = '@(Context.User.Identity.Name)';
		var players = '@Model.GetPlayers(2)';
		var playerOne = players[0].UserName;
		var playerTwo = players[1].UserName;
		var playerThree = players[3].UserName;
		var playerFour = players[4].UserName;
		var card_left = [];
		var card_top = [];

		$("#GameRestart").hide();
		$("#winner-dialog-popup").hide();

		function setCard(card, pos) {
			var suit;
			var rank = "Rank_" + card[1];

			if (card[0] === "H") {
				suit = "Heart";
			}
			else if (card[0] === "S") {
				suit = "Spade";
			}
			else if (card[0] === "D") {
				suit = "Diamond";
			}
			else if (card[0] === "C") {
				suit = "Club";
			}
			else {
				$("#" + pos).hide();
			}

			$("#" + pos).addClass(suit + rank + "Card");

		}

		hub.client.Broadcast = function (status) {
			var statusArray = status.split("|");
			var handArray = statusArray[1].split("/");
			var index;

			// find which player's cards should be picked
			if (currentUser === playerOne) {
				index = 0;
			}
			else if (currentUser === playerTwo) {
				index = 1;
			}
			else if (currentUser === playerThree) {
				index = 2;
			}
			else if (currentUser === playerFour) {
				index = 3;
			}

			var cardArray = handArray[i].split(",");

			// display the player's cards
			for (var i = 1; i <= 13; i++) {
				// extract card from string
				var cardstring = cardArray[i - 1];

				setCard(cardstring, i);

			}

		};

		function dealCards() {
			//CardPosition
			for (k = 1; k <= 13; k++) {
				card_left[k] = 27 + 2.5 * k;
				card_top[k] = 75;
			}
			for (k = 14; k <= 26; k++) {
				card_top[k] = -12 + 2.5 * k;
				card_left[k] = 10;
			}
			for (k = 27; k <= 39 ; k++) {
				card_left[k] = 27 + 2.5 * (k - 26);
				card_top[k] = 5;
			}
			for (k = 40; k <= 52 ; k++) {
				card_top[k] = -12 + 2.5 * (k - 26);
				card_left[k] = 80;
			}

			for (i = 1; i <= 52; i++) setTimeout("moveToPlace(" + i + ")", i * 100);
		}
	
		function moveToPlace(id) {
			el = document.getElementById("card_" + id);
			//var el = $("#card_"+ id);
			el.style["zIndex"] = 10;
			el.style["left"] = card_left[id] + "%";
			el.style["top"] = card_top[id] + "%";
			//el.style["WebkitTransform"] = "rotate(180deg)";
			el.style["zIndex"] = 0;

			if ((id > 13 && id < 27) || (id > 39 && id <= 52))
				el.style["WebkitTransform"] = "rotate(90deg)";
		}

		hub.client.GameOver = function (winner) {
			if (winner != "") {
				$("#winner-dialog-popup").text(winner + " wins!");
				if (winner == currentUser) {
					$("#GameWins").html(parseInt($("#GameWins").html(), 10) + 1);
				}
				else {
					$("#GameLoss").html(parseInt($("#GameLoss").html(), 10) + 1);
				}
			}
			else {
				$("#winner-dialog-popup").text("It's a draw!");
				$("#GameDraws").html(parseInt($("#GameDraws").html(), 10) + 1);
			}

			$("#winner-dialog-popup").show(2);

		}

		$.connection.hub.start().done(function() {
			hub.server.join(group);
			hub.server.gameStarted(group);
			hub.server.tryAction(group, "checkAI", currentUser);

			$("#tic-tac-toe tr td").click(function () {
				hub.server.tryAction(group, "insert" + this.id, currentUser);
			});

		});
	});
</script>